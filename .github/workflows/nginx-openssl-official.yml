name: Build NGINX (OpenSSL)

on:
  workflow_dispatch:
    inputs:
      nginx_version:
        description: 'Nginx version tag (e.g., release-1.29.1). Leave empty for latest stable.'
        required: false
      openssl_version:
        description: 'OpenSSL version tag (e.g., openssl-3.5.2). Leave empty for latest stable.'
        required: false

jobs:
  build-nginx:
    runs-on: ubuntu-latest
    container:
      image: debian:latest
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get upgrade -y
          apt-get install -y build-essential libpcre2-8-0 libpcre2-dev zlib1g zlib1g-dev libssl-dev git sudo curl aria2

      - name: Download and extract Nginx source
        run: |
          cd ..
          if [ -n "${{ github.event.inputs.nginx_version }}" ]; then
            NGINX_TAG=${{ github.event.inputs.nginx_version }}
          else
            NGINX_TAG=$(curl -s https://api.github.com/repos/nginx/nginx/git/refs/tags | \
              grep '"ref": "refs/tags/release-' | \
              grep -vE 'rc|beta|alpha' | \
              sed 's/.*refs\/tags\/\(release-[0-9.]*\).*/\1/' | \
              sort -V | tail -n 1)
          fi
          echo "Using Nginx version: $NGINX_TAG"
          
          aria2c -x 8 -s 8 -o nginx.tar.gz https://github.com/nginx/nginx/archive/refs/tags/$NGINX_TAG.tar.gz
          tar -xzf nginx.tar.gz
          mv nginx-$NGINX_TAG nginx

      - name: Download and extract OpenSSL source
        run: |
          cd ..
          if [ -n "${{ github.event.inputs.openssl_version }}" ]; then
            OPENSSL_TAG=${{ github.event.inputs.openssl_version }}
          else
            OPENSSL_TAG=$(curl -s https://api.github.com/repos/openssl/openssl/git/refs/tags | \
              grep '"ref": "refs/tags/openssl-' | \
              grep -vE 'rc|beta|alpha' | \
              sed 's/.*refs\/tags\/\(openssl-[0-9.]*\).*/\1/' | \
              sort -V | tail -n 1)
          fi
          echo "Using OpenSSL version: $OPENSSL_TAG"
          
          aria2c -x 8 -s 8 -o openssl.tar.gz https://github.com/openssl/openssl/archive/refs/tags/$OPENSSL_TAG.tar.gz
          tar -xzf openssl.tar.gz
          mv openssl-$OPENSSL_TAG openssl

      - name: Build Nginx
        run: |
          cd ../nginx
          ./auto/configure --prefix=/usr/local/nginx --with-compat --with-http_v2_module \
            --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module \
            --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module \
            --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module \
            --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module \
            --with-http_v3_module --with-stream --with-stream_realip_module --with-stream_ssl_module \
            --with-stream_ssl_preread_module \
            --with-openssl=../openssl \
            --with-openssl-opt="enable-ktls"
          make -j$(nproc)
          sudo make install

      - name: Verify Nginx version
        run: /usr/local/nginx/sbin/nginx -V

      - name: Package Nginx binary
        run: |
          cd /usr/local/nginx
          sudo tar -czvf nginx-built.tar.gz sbin/ conf/ html/ logs/
          sudo mv nginx-built.tar.gz $GITHUB_WORKSPACE

      - name: Set TAG_NAME with UTC date
        run: echo "DATE=v$(date -u +'%Y.%m.%d-%H%M')" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "BUILD ${{ env.DATE }}"
          path: nginx-built.tar.gz

      - name: Release
        uses: softprops/action-gh-release@v2.3.2
        with:
          tag_name: "BUILD_${{ env.DATE }}"
          draft: false
          prerelease: false
          files: nginx-built.tar.gz
